name: Unit Tests

on:
  push:
  pull_request:
  # schedule:
  #   - cron: '00 4 * * *'  # daily at 4AM

jobs:
  run_tests:
    runs-on: ${{ matrix.host-os }}
    strategy:
      matrix:
        host-os: ["ubuntu-latest"]
        # host-os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Set env vars
        run: |
          export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}  # just the repo, as opposed to org/repo
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Start Sirepo
        run: |
          set -vxeuo pipefail
          git clone https://github.com/NSLS-II/sirepo-bluesky ~/sirepo-bluesky
          cd ~/sirepo-bluesky
          . scripts/start_sirepo.sh -d
          export SIREPO_DOCKER_CONTAINER_ID
          echo "SIREPO_DOCKER_CONTAINER_ID=${SIREPO_DOCKER_CONTAINER_ID}" >> $GITHUB_ENV

      - name: Check Sirepo state
        run: |
          set -vxeuo pipefail
          # Sleeping to allow sirepo time to start up
          sleep 10
          docker images
          docker ps -a
          container=$(docker ps -q -f id=${SIREPO_DOCKER_CONTAINER_ID})
          docker logs ${SIREPO_DOCKER_CONTAINER_ID}
          if [ -z "${container}" ]; then
              echo "Container ID ${SIREPO_DOCKER_CONTAINER_ID} is not running. Exiting."
              exit 1
          fi

      - name: Copy databroker config file
        run: |
          set -vxeuo pipefail
          mkdir -v -p ~/.config/databroker/
          cp -v ~/sirepo-bluesky/examples/local.yml ~/.config/databroker/

      - name: Set up Python ${{ matrix.python-version }} with conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.REPOSITORY_NAME }}-py${{ matrix.python-version }}
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: conda-forge

      - name: Install dependencies
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeo pipefail

          conda env list
          mamba install -c conda-forge shadow3 srwpy
          pip install --upgrade pip wheel
          pip install -v .
          pip install -r requirements-dev.txt
          pip list
          conda list

      - name: Test with pytest
        run: |
          set -vxeuo pipefail
          coverage run -m pytest -vv -s
          coverage report -m
