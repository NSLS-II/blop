	
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "blop"
description = "Beamline optimization with machine learning"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
  { name = "Max Rakitin", email = "mrakitin@bnl.gov" },
  { name = "Thomas Morris", email = "tmorris@bnl.gov" },
  { name = "Thomas Hopkins", email = "thopkins1@bnl.gov" },
]
maintainers = [
  { name = "Max Rakitin", email = "mrakitin@bnl.gov" },
  { name = "Thomas Morris", email = "tmorris@bnl.gov" },
  { name = "Thomas Hopkins", email = "thopkins1@bnl.gov" },
  { name = "Jessica Moylan", email = "jmoylan1@bnl.gov" },
  { name = "Jennefer Maldonado", email = "jmaldonad@bnl.gov" },
  { name = "Roman Chernikov", email = "rcherniko@bnl.gov" },
]
requires-python = ">=3.10"
dependencies = [
  "python-tsp",
  "ax-platform>=1.0.0,<1.1",
  "bluesky>=1.14.2",
  "databroker>=1.2.0,<1.3",
  "tiled[all]>=0.1.1",
  "torch",
  "matplotlib",
  "pyqt5",
  "ophyd",
  "botorch>=0.14.0,<0.16",
  "gpytorch",
  "scipy",
  "numpy",
  "h5py",
  "area-detector-handlers",
  "bluesky-tiled-plugins",
  "networkx~=2.1",  # FIXME: Required by python-tsp
  "tabulate~=0.8.7",  # FIXME: Required by python-tsp
]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Physics",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
  "pytest",
  "ipykernel",
  "ruff",
  "nbstripout",
  "pre-commit",
  "pandas-stubs",
  "coverage",
]
docs = [
  "numpydoc",
  "sphinx-copybutton",
  "myst-nb",
  "furo",
  "jupytext",
]

[project.urls]
Homepage = "https://github.com/NSLS-II/blop"
Documentation = "https://nsls-ii.github.io/blop"
"Bug Reports" = "https://github.com/NSLS-II/blop/issues"

[tool.hatch]
version.source = "vcs"

[tool.hatch.build]
artifacts = ["src/blop/_version.py"]

[tool.hatch.build.targets.wheel]
sources = ["src"]

[tool.hatch.build.hooks.vcs]
version-file = "src/blop/_version.py"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.ruff]
src = ["src", "examples", "docs/source/tutorials"]
line-length = 125
lint.select = [
    "B",       # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",      # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",       # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",       # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",       # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",       # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",      # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "SLF",     # self - https://docs.astral.sh/ruff/settings/#lintflake8-self
    "PLC2701", # private import - https://docs.astral.sh/ruff/rules/import-private-name/
    "LOG015",  # root logger call - https://docs.astral.sh/ruff/rules/root-logger-call/
    "S101",    # assert - https://docs.astral.sh/ruff/rules/assert/
    "D",       # docstring - https://docs.astral.sh/ruff/rules/#pydocstyle-d
]
lint.ignore = [
  "D",  # TODO: Add docstrings, then enforce these errors
  "SLF001",  # TODO: Fix private member access, https://github.com/NSLS-II/blop/issues/94
  "B901", # return-in-generator - https://docs.astral.sh/ruff/rules/return-in-generator/
]
lint.preview = true # so that preview mode PLC2701, and LOG015 is enabled

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"src/blop/tests/**/*" = ["S101", "SLF001", "D"]
# Ignore F821: undefined name '...' since the ipython profiles are dynamically loaded into the namespace
"docs/**/*" = ["F821"]
"examples/**/*" = ["F821"]
